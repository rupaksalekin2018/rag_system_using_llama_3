# -*- coding: utf-8 -*-
"""Agric_Ai_RAG.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I1KpJXX-MrDMGpKZVGprGzwDm74CWhho
"""

!pip install langchain
!pip install torch
!pip install sentence_transformers
!pip install faiss-cpu
!pip install huggingface-hub
!pip install pypdf
!pip -q install accelerate
!pip install llama-cpp-python
!pip -q install git+https://github.com/huggingface/transformers

pip install langchain-community

from langchain.chains import RetrievalQA
from langchain.embeddings import HuggingFaceEmbeddings
from langchain.llms import LlamaCpp
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.vectorstores import FAISS
# from langchain.document_loaders import PyPDFDirectoryLoader

from langchain_community.document_loaders import PyPDFDirectoryLoader

#load pdf files
loader = PyPDFDirectoryLoader("/content/drive/MyDrive/Agric PDFS")
data = loader.load()

# data

#Step 05: Split the Extracted Data into Text Chunks
text_splitter = RecursiveCharacterTextSplitter(chunk_size=10000, chunk_overlap=20)

text_chunks = text_splitter.split_documents(data)

len(text_chunks)

#get the third chunk
text_chunks[23]

#Step 06:Downlaod the Embeddings
embeddings = HuggingFaceEmbeddings(model_name="sentence-transformers/all-MiniLM-L6-v2")

#Step 08: Create Embeddings for each of the Text Chunk
vector_store = FAISS.from_documents(text_chunks, embedding=embeddings)

#Import Model
llm = LlamaCpp(
    model_path="/content/drive/MyDrive/Agric PDFS/Mistral-7B-Instruct-v0.1.Q4_K_M.gguf",
    temperature=0.75,
    top_p=1,
    verbose=True,
    n_ctx=4096
)

qa = RetrievalQA.from_chain_type(llm=llm, chain_type="stuff", retriever=vector_store.as_retriever(search_kwargs={"k": 2}))

query = "What is linear regression model"

qa.run(query)

query = "how to grow rice?"

qa.run(query)

query = "What variety of rice is available?"

# qa.run(query)

query = "How many variety of rice is available?"

qa.run(query)

query = "Hybrid variety of rice and their characteristic?"

qa.run(query)

query = "How the prepare the seed bed for rice?"

qa.run(query)

query = "who is the president of america?"

qa.run(query)

import sys

while True:
  user_input = input(f"Input Prompt: ")
  if user_input == 'exit':
    print('Exiting')
    sys.exit()
  if user_input == '':
    continue
  result = qa({'query': user_input})
  print(f"Answer: {result['result']}")